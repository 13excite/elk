filter {
  if [type] == "prizma_backend" {
    grok {
            match => { "message" => "%{QUERY_VIDEO_BCKND}" }
            add_tag => [ "video", "img" ]
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{REQUEST_BCKND}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "video", "img" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{RETURN_VIDEO_BCKND_DATA}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "video", "img" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{RETURN_VIDEO_BCKND_PUT_RESULT}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "video", "img" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{RETURN_VIDEO_BCKND_LAST}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "video", "img" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{REQUEST_NO_VIDEO_BCKND}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "non" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{RETURN_NO_VIDEO_BCKND}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "non" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{ERROR_BCKND_REQUEST}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "non" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{INCOM_CONNECT_BCKND}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "non" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{PROC_VIDEO_GPU_TIME}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "non" ]
            }
        }
        if "_grokparsefailure" in [tags] {
            grok {
                match => { "message" => "%{FULL_PRIZMA_LOG}" }
                remove_tag => [ "_grokparsefailure" ]
                add_tag => [ "log-not-found" ]
            }
        }
        mutate {
            convert => { "times_total" => "integer" }
            convert => { "times_queue" => "integer" }
            convert => { "times_worker" => "integer" }
            convert => { "data_size" => "integer" }
            convert => { "data_len" => "integer" }
            convert => { "lua_mem" => "integer" }
            convert => { "gpu_time" => "integer" }
            convert => {"elapsed" => "integer" }
            convert => { "data_len" => "integer" }
            convert => { "answer_lenght" => "integer" }
            
        }
    }
}